/* 
http://proekti.ucoz.net/index/dinamicheskoe_programmirovanie/0-16
Лесенка
Вова стоит перед лесенкой из N ступеней. На каждой из ступеней написаны произвольные целые числа. Первым шагом Вова может перейти на первую ступень или, перепрыгнув через первую, сразу оказаться на второй. Так же он поступает и дальше, пока не достигнет N-ой ступени. Посчитаем сумму всех чисел, написанных на ступенях, через которые прошёл Вова.

Требуется написать программу, которая определит оптимальный маршрут Вовы, при котором, шагая, он получит наибольшую сумму.

Входные данные

В первой строке содержится натуральное число N — количество ступеней лестницы (2<=N<=1000). Во второй строке через пробел заданы числа, написанные на ступенях лестницы, начиная с первой. Числа, написанные на ступенях, не превосходят по модулю 1000.

Выходные данные

Выведите наибольшее значение суммы.

Примеры
Ввод
Вывод
3
1 2 1
4

3
1 -1 1
2

*/
#include <vector>
#include <iostream>

using namespace std;


int main()
{

    int n;
    cin>>n;
vector<int> vals(n+1,0);
vector<int> cost(n+1,0);
for( int i=1;i<n+1;i++)
    cin>> vals[i];
cost[1]=vals[1];

for (int i=2; i<n+1; i++){
    cost[i]=max(cost[i-1]+vals[i],
                cost[i-2]+vals[i]);
}
    cout <<cost[n];
    return 0;
}